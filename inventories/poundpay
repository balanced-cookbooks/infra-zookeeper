#!/usr/bin/env python
import os, json
from confu import aws, ansible
from boto import ec2, exception


region = os.environ.get('AWS_REGION', 'us-east-1')
aws_access_key_id = os.environ.get('AWS_ACCESS_KEY_ID')
aws_secret_access_key = os.environ.get('AWS_SECRET_ACCESS_KEY')

aws.cxn.activate(profile_name='poundpay', default_region=region)
inventory = ansible.AWSRemoteInventory(
    instances=(
        aws.instances()
        .regions(region)
        .filter(('tag:confu:infra-silo', 'zookeeper'))
        .filter(('instance-state-name', 'running'))
    ),
    group_tags=[
       'aws:cloudformation:stack-name',
       'confu:infra-silo',
       ('confu:infra-env', 'env-{value}', 'infra_env'),
       ('confu:roles', lambda value: value.split(','))
    ],
)

def get_instance_indices(region, aws_access_key_id, aws_secret_access_key):
#    import ipdb; ipdb.set_trace()
    conn = ec2.connect_to_region(region,aws_access_key_id = aws_access_key_id, aws_secret_access_key = aws_secret_access_key)
    rinstances = conn.get_all_instances()
    output = {}
    id = 1
    for rinstance in rinstances:
        iinstance = rinstance.instances[0]
        try:
            if iinstance.tags['confu:infra-silo'] == 'zookeeper' and iinstance.state == 'running':
                output[iinstance.private_ip_address.encode()] = {'myid': id }
                id = id + 1
        except KeyError:
            pass
    return output

if __name__ == '__main__':
    result = inventory.all()
    result['_meta']['hostvars'] = dict(get_instance_indices(region, aws_access_key_id, aws_secret_access_key))
    print json.dumps(result, indent=4, sort_keys=True)

