#!/usr/bin/env python
import os, json
from confu import aws, ansible
import boto


region = os.environ.get('AWS_REGION', 'us-east-1')

aws.cxn.activate(profile_name='poundpay', default_region=region)
inventory = ansible.AWSRemoteInventory(
    instances=(
        aws.instances()
            .regions(region)
            .filter(('tag:confu:infra-silo', 'zookeeper'))
            .filter(('instance-state-name', 'running'))
    ),
    group_tags=[
        'aws:cloudformation:stack-name',
        'confu:infra-silo',
        ('confu:infra-env', 'env-{value}', 'infra_env'),
        ('confu:roles', lambda value: value.split(','))
    ],
)


def get_instance_indices():
    conn = boto.connect_ec2()
    all_instances = conn.get_all_instances()
    instance_id = 1
    for rinstance in all_instances:
        iinstance = rinstance.instances[0]
        try:
            if all([
                        iinstance.tags['confu:infra-silo'] == 'zookeeper',
                        iinstance.state == 'running'
            ]):
                yield (
                    iinstance.private_ip_address.encode(),
                    {'myid': instance_id}
                )
                instance_id += 1
        except KeyError:
            pass


if __name__ == '__main__':
    result = inventory.all()
    result['_meta']['hostvars'] = dict(
        get_instance_indices()
    )
    print json.dumps(result, indent=4, sort_keys=True)

